package org.kson.parser.json.generated

import org.kson.schema.JsonSchemaTest
import kotlin.test.Test

/**
 * DO NOT MANUALLY EDIT.  This class is GENERATED by `./gradlew generateJsonTestSuite` task 
 * which calls [org.kson.jsonsuite.JsonTestSuiteGenerator]---see that class for more info.
 *
 * TODO expand the testing here as we implement Json Schema support by 
 *   removing exclusions from [org.kson.jsonsuite.schemaTestSuiteExclusions]
 */
@Suppress("UNREACHABLE_CODE", "ClassName") // unreachable code is okay here until we complete the above TODO
class SchemaDraft2020_12SuiteTest_minProperties : JsonSchemaTest {

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/minProperties.json`:
     *     "minProperties validation -> longer is valid"
     *
     * Test ID: "minProperties::minProperties validation::longer is valid"
     */
    @Test
    fun jsonSchemaSuiteTest_1() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": 1,
                    "bar": 2
                }
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "minProperties": 1
                }
            """,
            true,
            """    schemaTestId: "minProperties::minProperties validation::longer is valid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/minProperties.json`:
     *     "minProperties validation -> exact length is valid"
     *
     * Test ID: "minProperties::minProperties validation::exact length is valid"
     */
    @Test
    fun jsonSchemaSuiteTest_2() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": 1
                }
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "minProperties": 1
                }
            """,
            true,
            """    schemaTestId: "minProperties::minProperties validation::exact length is valid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/minProperties.json`:
     *     "minProperties validation -> too short is invalid"
     *
     * Test ID: "minProperties::minProperties validation::too short is invalid"
     */
    @Test
    fun jsonSchemaSuiteTest_3() {
        
        assertKsonEnforcesSchema(
            """
                {
                }
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "minProperties": 1
                }
            """,
            false,
            """    schemaTestId: "minProperties::minProperties validation::too short is invalid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/minProperties.json`:
     *     "minProperties validation -> ignores arrays"
     *
     * Test ID: "minProperties::minProperties validation::ignores arrays"
     */
    @Test
    fun jsonSchemaSuiteTest_4() {
        
        assertKsonEnforcesSchema(
            """
                [
                ]
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "minProperties": 1
                }
            """,
            true,
            """    schemaTestId: "minProperties::minProperties validation::ignores arrays"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/minProperties.json`:
     *     "minProperties validation -> ignores strings"
     *
     * Test ID: "minProperties::minProperties validation::ignores strings"
     */
    @Test
    fun jsonSchemaSuiteTest_5() {
        
        assertKsonEnforcesSchema(
            """
                ""
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "minProperties": 1
                }
            """,
            true,
            """    schemaTestId: "minProperties::minProperties validation::ignores strings"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/minProperties.json`:
     *     "minProperties validation -> ignores other non-objects"
     *
     * Test ID: "minProperties::minProperties validation::ignores other non-objects"
     */
    @Test
    fun jsonSchemaSuiteTest_6() {
        
        assertKsonEnforcesSchema(
            """
                12
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "minProperties": 1
                }
            """,
            true,
            """    schemaTestId: "minProperties::minProperties validation::ignores other non-objects"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/minProperties.json`:
     *     "minProperties validation with a decimal -> longer is valid"
     *
     * Test ID: "minProperties::minProperties validation with a decimal::longer is valid"
     */
    @Test
    fun jsonSchemaSuiteTest_7() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": 1,
                    "bar": 2
                }
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "minProperties": 1.0
                }
            """,
            true,
            """    schemaTestId: "minProperties::minProperties validation with a decimal::longer is valid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/minProperties.json`:
     *     "minProperties validation with a decimal -> too short is invalid"
     *
     * Test ID: "minProperties::minProperties validation with a decimal::too short is invalid"
     */
    @Test
    fun jsonSchemaSuiteTest_8() {
        
        assertKsonEnforcesSchema(
            """
                {
                }
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "minProperties": 1.0
                }
            """,
            false,
            """    schemaTestId: "minProperties::minProperties validation with a decimal::too short is invalid"    """)
    }
}
