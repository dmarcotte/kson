package org.kson.parser.json.generated

import org.kson.schema.JsonSchemaTest
import kotlin.test.Test

/**
 * DO NOT MANUALLY EDIT.  This class is GENERATED by `./gradlew generateJsonTestSuite` task 
 * which calls [org.kson.jsonsuite.JsonTestSuiteGenerator]---see that class for more info.
 *
 * TODO expand the testing here as we implement Json Schema support by 
 *   removing exclusions from [org.kson.jsonsuite.schemaTestSuiteExclusions]
 */
@Suppress("UNREACHABLE_CODE", "ClassName") // unreachable code is okay here until we complete the above TODO
class SchemaDraft2020_12SuiteTest_maximum : JsonSchemaTest {

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/maximum.json`:
     *     "maximum validation -> below the maximum is valid"
     *
     * Test ID: "maximum::maximum validation::below the maximum is valid"
     */
    @Test
    fun jsonSchemaSuiteTest_1() {
        
        assertKsonEnforcesSchema(
            """
                2.6
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "maximum": 3.0
                }
            """,
            true,
            """    schemaTestId: "maximum::maximum validation::below the maximum is valid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/maximum.json`:
     *     "maximum validation -> boundary point is valid"
     *
     * Test ID: "maximum::maximum validation::boundary point is valid"
     */
    @Test
    fun jsonSchemaSuiteTest_2() {
        
        assertKsonEnforcesSchema(
            """
                3.0
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "maximum": 3.0
                }
            """,
            true,
            """    schemaTestId: "maximum::maximum validation::boundary point is valid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/maximum.json`:
     *     "maximum validation -> above the maximum is invalid"
     *
     * Test ID: "maximum::maximum validation::above the maximum is invalid"
     */
    @Test
    fun jsonSchemaSuiteTest_3() {
        
        assertKsonEnforcesSchema(
            """
                3.5
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "maximum": 3.0
                }
            """,
            false,
            """    schemaTestId: "maximum::maximum validation::above the maximum is invalid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/maximum.json`:
     *     "maximum validation -> ignores non-numbers"
     *
     * Test ID: "maximum::maximum validation::ignores non-numbers"
     */
    @Test
    fun jsonSchemaSuiteTest_4() {
        
        assertKsonEnforcesSchema(
            """
                "x"
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "maximum": 3.0
                }
            """,
            true,
            """    schemaTestId: "maximum::maximum validation::ignores non-numbers"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/maximum.json`:
     *     "maximum validation with unsigned integer -> below the maximum is invalid"
     *
     * Test ID: "maximum::maximum validation with unsigned integer::below the maximum is invalid"
     */
    @Test
    fun jsonSchemaSuiteTest_5() {
        
        assertKsonEnforcesSchema(
            """
                299.97
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "maximum": 300
                }
            """,
            true,
            """    schemaTestId: "maximum::maximum validation with unsigned integer::below the maximum is invalid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/maximum.json`:
     *     "maximum validation with unsigned integer -> boundary point integer is valid"
     *
     * Test ID: "maximum::maximum validation with unsigned integer::boundary point integer is valid"
     */
    @Test
    fun jsonSchemaSuiteTest_6() {
        
        assertKsonEnforcesSchema(
            """
                300
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "maximum": 300
                }
            """,
            true,
            """    schemaTestId: "maximum::maximum validation with unsigned integer::boundary point integer is valid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/maximum.json`:
     *     "maximum validation with unsigned integer -> boundary point float is valid"
     *
     * Test ID: "maximum::maximum validation with unsigned integer::boundary point float is valid"
     */
    @Test
    fun jsonSchemaSuiteTest_7() {
        
        assertKsonEnforcesSchema(
            """
                300.0
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "maximum": 300
                }
            """,
            true,
            """    schemaTestId: "maximum::maximum validation with unsigned integer::boundary point float is valid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft2020-12/maximum.json`:
     *     "maximum validation with unsigned integer -> above the maximum is invalid"
     *
     * Test ID: "maximum::maximum validation with unsigned integer::above the maximum is invalid"
     */
    @Test
    fun jsonSchemaSuiteTest_8() {
        
        assertKsonEnforcesSchema(
            """
                300.5
            """,
            """
                {
                    "${'$'}schema": "https://json-schema.org/draft/2020-12/schema",
                    "maximum": 300
                }
            """,
            false,
            """    schemaTestId: "maximum::maximum validation with unsigned integer::above the maximum is invalid"    """)
    }
}
