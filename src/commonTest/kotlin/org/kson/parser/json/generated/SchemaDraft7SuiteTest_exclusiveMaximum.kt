package org.kson.parser.json.generated

import org.kson.schema.JsonSchemaTest
import kotlin.test.Test

/**
 * DO NOT MANUALLY EDIT.  This class is GENERATED by `./gradlew generateJsonTestSuite` task 
 * which calls [org.kson.jsonsuite.JsonTestSuiteGenerator]---see that class for more info.
 *
 * TODO expand the testing here as we implement Json Schema support by 
 *   removing exclusions from [org.kson.jsonsuite.schemaTestSuiteExclusions]
 */
@Suppress("UNREACHABLE_CODE", "ClassName") // unreachable code is okay here until we complete the above TODO
class SchemaDraft7SuiteTest_exclusiveMaximum : JsonSchemaTest {

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/exclusiveMaximum.json`:
     *     "exclusiveMaximum validation -> below the exclusiveMaximum is valid"
     *
     * Test ID: "exclusiveMaximum::exclusiveMaximum validation::below the exclusiveMaximum is valid"
     */
    @Test
    fun jsonSchemaSuiteTest_1() {
        
        assertKsonEnforcesSchema(
            """
                2.2
            """,
            """
                {
                    "exclusiveMaximum": 3.0
                }
            """,
            true,
            """    schemaTestId: "exclusiveMaximum::exclusiveMaximum validation::below the exclusiveMaximum is valid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/exclusiveMaximum.json`:
     *     "exclusiveMaximum validation -> boundary point is invalid"
     *
     * Test ID: "exclusiveMaximum::exclusiveMaximum validation::boundary point is invalid"
     */
    @Test
    fun jsonSchemaSuiteTest_2() {
        
        assertKsonEnforcesSchema(
            """
                3.0
            """,
            """
                {
                    "exclusiveMaximum": 3.0
                }
            """,
            false,
            """    schemaTestId: "exclusiveMaximum::exclusiveMaximum validation::boundary point is invalid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/exclusiveMaximum.json`:
     *     "exclusiveMaximum validation -> above the exclusiveMaximum is invalid"
     *
     * Test ID: "exclusiveMaximum::exclusiveMaximum validation::above the exclusiveMaximum is invalid"
     */
    @Test
    fun jsonSchemaSuiteTest_3() {
        
        assertKsonEnforcesSchema(
            """
                3.5
            """,
            """
                {
                    "exclusiveMaximum": 3.0
                }
            """,
            false,
            """    schemaTestId: "exclusiveMaximum::exclusiveMaximum validation::above the exclusiveMaximum is invalid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/exclusiveMaximum.json`:
     *     "exclusiveMaximum validation -> ignores non-numbers"
     *
     * Test ID: "exclusiveMaximum::exclusiveMaximum validation::ignores non-numbers"
     */
    @Test
    fun jsonSchemaSuiteTest_4() {
        
        assertKsonEnforcesSchema(
            """
                "x"
            """,
            """
                {
                    "exclusiveMaximum": 3.0
                }
            """,
            true,
            """    schemaTestId: "exclusiveMaximum::exclusiveMaximum validation::ignores non-numbers"    """)
    }
}
