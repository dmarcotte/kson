package org.kson.parser.json.generated

import org.kson.schema.JsonSchemaTest
import kotlin.test.Test

/**
 * DO NOT MANUALLY EDIT.  This class is GENERATED by `./gradlew generateJsonTestSuite` task 
 * which calls [org.kson.jsonsuite.JsonTestSuiteGenerator]---see that class for more info.
 *
 * TODO expand the testing here as we implement Json Schema support by 
 *   removing exclusions from [org.kson.jsonsuite.schemaTestSuiteExclusions]
 */
@Suppress("UNREACHABLE_CODE", "ClassName") // unreachable code is okay here until we complete the above TODO
class SchemaDraft7SuiteTest_additionalProperties : JsonSchemaTest {

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties being false does not allow other properties -> no additional properties is valid"
     *
     * Test ID: "additionalProperties::additionalProperties being false does not allow other properties::no additional properties is valid"
     */
    @Test
    fun jsonSchemaSuiteTest_1() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": 1
                }
            """,
            """
                {
                    "properties": {
                        "foo": {
                        },
                        "bar": {
                        }
                    },
                    "patternProperties": {
                        "^v": {
                        }
                    },
                    "additionalProperties": false
                }
            """,
            true,
            """    schemaTestId: "additionalProperties::additionalProperties being false does not allow other properties::no additional properties is valid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties being false does not allow other properties -> an additional property is invalid"
     *
     * Test ID: "additionalProperties::additionalProperties being false does not allow other properties::an additional property is invalid"
     */
    @Test
    fun jsonSchemaSuiteTest_2() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": 1,
                    "bar": 2,
                    "quux": "boom"
                }
            """,
            """
                {
                    "properties": {
                        "foo": {
                        },
                        "bar": {
                        }
                    },
                    "patternProperties": {
                        "^v": {
                        }
                    },
                    "additionalProperties": false
                }
            """,
            false,
            """    schemaTestId: "additionalProperties::additionalProperties being false does not allow other properties::an additional property is invalid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties being false does not allow other properties -> ignores arrays"
     *
     * Test ID: "additionalProperties::additionalProperties being false does not allow other properties::ignores arrays"
     */
    @Test
    fun jsonSchemaSuiteTest_3() {
        
        assertKsonEnforcesSchema(
            """
                [
                    1,
                    2,
                    3
                ]
            """,
            """
                {
                    "properties": {
                        "foo": {
                        },
                        "bar": {
                        }
                    },
                    "patternProperties": {
                        "^v": {
                        }
                    },
                    "additionalProperties": false
                }
            """,
            true,
            """    schemaTestId: "additionalProperties::additionalProperties being false does not allow other properties::ignores arrays"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties being false does not allow other properties -> ignores strings"
     *
     * Test ID: "additionalProperties::additionalProperties being false does not allow other properties::ignores strings"
     */
    @Test
    fun jsonSchemaSuiteTest_4() {
        
        assertKsonEnforcesSchema(
            """
                "foobarbaz"
            """,
            """
                {
                    "properties": {
                        "foo": {
                        },
                        "bar": {
                        }
                    },
                    "patternProperties": {
                        "^v": {
                        }
                    },
                    "additionalProperties": false
                }
            """,
            true,
            """    schemaTestId: "additionalProperties::additionalProperties being false does not allow other properties::ignores strings"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties being false does not allow other properties -> ignores other non-objects"
     *
     * Test ID: "additionalProperties::additionalProperties being false does not allow other properties::ignores other non-objects"
     */
    @Test
    fun jsonSchemaSuiteTest_5() {
        
        assertKsonEnforcesSchema(
            """
                12
            """,
            """
                {
                    "properties": {
                        "foo": {
                        },
                        "bar": {
                        }
                    },
                    "patternProperties": {
                        "^v": {
                        }
                    },
                    "additionalProperties": false
                }
            """,
            true,
            """    schemaTestId: "additionalProperties::additionalProperties being false does not allow other properties::ignores other non-objects"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties being false does not allow other properties -> patternProperties are not additional properties"
     *
     * Test ID: "additionalProperties::additionalProperties being false does not allow other properties::patternProperties are not additional properties"
     */
    @Test
    fun jsonSchemaSuiteTest_6() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": 1,
                    "vroom": 2
                }
            """,
            """
                {
                    "properties": {
                        "foo": {
                        },
                        "bar": {
                        }
                    },
                    "patternProperties": {
                        "^v": {
                        }
                    },
                    "additionalProperties": false
                }
            """,
            true,
            """    schemaTestId: "additionalProperties::additionalProperties being false does not allow other properties::patternProperties are not additional properties"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "non-ASCII pattern with additionalProperties -> matching the pattern is valid"
     *
     * Test ID: "additionalProperties::non-ASCII pattern with additionalProperties::matching the pattern is valid"
     */
    @Test
    fun jsonSchemaSuiteTest_7() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "ármányos": 2
                }
            """,
            """
                {
                    "patternProperties": {
                        "^á": {
                        }
                    },
                    "additionalProperties": false
                }
            """,
            true,
            """    schemaTestId: "additionalProperties::non-ASCII pattern with additionalProperties::matching the pattern is valid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "non-ASCII pattern with additionalProperties -> not matching the pattern is invalid"
     *
     * Test ID: "additionalProperties::non-ASCII pattern with additionalProperties::not matching the pattern is invalid"
     */
    @Test
    fun jsonSchemaSuiteTest_8() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "élmény": 2
                }
            """,
            """
                {
                    "patternProperties": {
                        "^á": {
                        }
                    },
                    "additionalProperties": false
                }
            """,
            false,
            """    schemaTestId: "additionalProperties::non-ASCII pattern with additionalProperties::not matching the pattern is invalid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties with schema -> no additional properties is valid"
     *
     * Test ID: "additionalProperties::additionalProperties with schema::no additional properties is valid"
     */
    @Test
    fun jsonSchemaSuiteTest_9() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": 1
                }
            """,
            """
                {
                    "properties": {
                        "foo": {
                        },
                        "bar": {
                        }
                    },
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            """,
            true,
            """    schemaTestId: "additionalProperties::additionalProperties with schema::no additional properties is valid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties with schema -> an additional valid property is valid"
     *
     * Test ID: "additionalProperties::additionalProperties with schema::an additional valid property is valid"
     */
    @Test
    fun jsonSchemaSuiteTest_10() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": 1,
                    "bar": 2,
                    "quux": true
                }
            """,
            """
                {
                    "properties": {
                        "foo": {
                        },
                        "bar": {
                        }
                    },
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            """,
            true,
            """    schemaTestId: "additionalProperties::additionalProperties with schema::an additional valid property is valid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties with schema -> an additional invalid property is invalid"
     *
     * Test ID: "additionalProperties::additionalProperties with schema::an additional invalid property is invalid"
     */
    @Test
    fun jsonSchemaSuiteTest_11() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": 1,
                    "bar": 2,
                    "quux": 12
                }
            """,
            """
                {
                    "properties": {
                        "foo": {
                        },
                        "bar": {
                        }
                    },
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            """,
            false,
            """    schemaTestId: "additionalProperties::additionalProperties with schema::an additional invalid property is invalid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties can exist by itself -> an additional valid property is valid"
     *
     * Test ID: "additionalProperties::additionalProperties can exist by itself::an additional valid property is valid"
     */
    @Test
    fun jsonSchemaSuiteTest_12() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": true
                }
            """,
            """
                {
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            """,
            true,
            """    schemaTestId: "additionalProperties::additionalProperties can exist by itself::an additional valid property is valid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties can exist by itself -> an additional invalid property is invalid"
     *
     * Test ID: "additionalProperties::additionalProperties can exist by itself::an additional invalid property is invalid"
     */
    @Test
    fun jsonSchemaSuiteTest_13() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": 1
                }
            """,
            """
                {
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            """,
            false,
            """    schemaTestId: "additionalProperties::additionalProperties can exist by itself::an additional invalid property is invalid"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties are allowed by default -> additional properties are allowed"
     *
     * Test ID: "additionalProperties::additionalProperties are allowed by default::additional properties are allowed"
     */
    @Test
    fun jsonSchemaSuiteTest_14() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": 1,
                    "bar": 2,
                    "quux": true
                }
            """,
            """
                {
                    "properties": {
                        "foo": {
                        },
                        "bar": {
                        }
                    }
                }
            """,
            true,
            """    schemaTestId: "additionalProperties::additionalProperties are allowed by default::additional properties are allowed"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties does not look in applicators -> properties defined in allOf are not examined"
     *
     * Test ID: "additionalProperties::additionalProperties does not look in applicators::properties defined in allOf are not examined"
     */
    @Test
    fun jsonSchemaSuiteTest_15() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": 1,
                    "bar": true
                }
            """,
            """
                {
                    "allOf": [
                        {
                            "properties": {
                                "foo": {
                                }
                            }
                        }
                    ],
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            """,
            false,
            """    schemaTestId: "additionalProperties::additionalProperties does not look in applicators::properties defined in allOf are not examined"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/additionalProperties.json`:
     *     "additionalProperties with null valued instance properties -> allows null values"
     *
     * Test ID: "additionalProperties::additionalProperties with null valued instance properties::allows null values"
     */
    @Test
    fun jsonSchemaSuiteTest_16() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": null
                }
            """,
            """
                {
                    "additionalProperties": {
                        "type": "null"
                    }
                }
            """,
            true,
            """    schemaTestId: "additionalProperties::additionalProperties with null valued instance properties::allows null values"    """)
    }
}
