package org.kson.parser.json.generated

import org.kson.schema.JsonSchemaTest
import kotlin.test.Test

/**
 * DO NOT MANUALLY EDIT.  This class is GENERATED by `./gradlew generateJsonTestSuite` task 
 * which calls [org.kson.jsonsuite.JsonTestSuiteGenerator]---see that class for more info.
 *
 * TODO expand the testing here as we implement Json Schema support by 
 *   removing exclusions from [org.kson.jsonsuite.schemaTestSuiteExclusions]
 */
@Suppress("UNREACHABLE_CODE", "ClassName") // unreachable code is okay here until we complete the above TODO
class SchemaDraft7SuiteTest_infinite_loop_detection : JsonSchemaTest {

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/infinite-loop-detection.json`:
     *     "evaluating the same schema location against the same data location twice is not a sign of an infinite loop -> passing case"
     *
     * Test ID: "infinite-loop-detection::evaluating the same schema location against the same data location twice is not a sign of an infinite loop::passing case"
     */
    @Test
    fun jsonSchemaSuiteTest_1() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": 1
                }
            """,
            """
                {
                    "definitions": {
                        "int": {
                            "type": "integer"
                        }
                    },
                    "allOf": [
                        {
                            "properties": {
                                "foo": {
                                    "${'$'}ref": "#/definitions/int"
                                }
                            }
                        },
                        {
                            "additionalProperties": {
                                "${'$'}ref": "#/definitions/int"
                            }
                        }
                    ]
                }
            """,
            true,
            """    schemaTestId: "infinite-loop-detection::evaluating the same schema location against the same data location twice is not a sign of an infinite loop::passing case"    """)
    }

    /**
     * Test generated by [org.kson.jsonsuite.JsonTestSuiteGenerator] based on `buildSrc/support/jsonsuite/JSON-Schema-Test-Suite/tests/draft7/infinite-loop-detection.json`:
     *     "evaluating the same schema location against the same data location twice is not a sign of an infinite loop -> failing case"
     *
     * Test ID: "infinite-loop-detection::evaluating the same schema location against the same data location twice is not a sign of an infinite loop::failing case"
     */
    @Test
    fun jsonSchemaSuiteTest_2() {
        
        assertKsonEnforcesSchema(
            """
                {
                    "foo": "a string"
                }
            """,
            """
                {
                    "definitions": {
                        "int": {
                            "type": "integer"
                        }
                    },
                    "allOf": [
                        {
                            "properties": {
                                "foo": {
                                    "${'$'}ref": "#/definitions/int"
                                }
                            }
                        },
                        {
                            "additionalProperties": {
                                "${'$'}ref": "#/definitions/int"
                            }
                        }
                    ]
                }
            """,
            false,
            """    schemaTestId: "infinite-loop-detection::evaluating the same schema location against the same data location twice is not a sign of an infinite loop::failing case"    """)
    }
}
